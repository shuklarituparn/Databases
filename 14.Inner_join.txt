In these tables, whenever a customer makes a payment, a new row is inserted into the payment table.

Each customer may have zero or many payments. However, each payment belongs to one and only one customer. The customer_id column establishes the relationship between the two tables.

The following statement uses the INNER JOIN clause to select data from both tables:

SELECT
	customer.customer_id,
	first_name,
	last_name,
	amount,
	payment_date
FROM
	customer
INNER JOIN payment 
    ON payment.customer_id = customer.customer_id    
ORDER BY payment_date;





//Using table aliases


SELECT
	c.customer_id,
	first_name,
	last_name,
	email,
	amount,
	payment_date
FROM
	customer c
INNER JOIN payment p 
    ON p.customer_id = c.customer_id                //can be done after payment p as p using(customer_id)
WHERE
    c.customer_id = 2;
    
    
    
SELECT
	c.customer_id,
	c.first_name customer_first_name,
	c.last_name customer_last_name,
	s.first_name staff_first_name,
	s.last_name staff_last_name,
	amount,
	payment_date
FROM
	customer c
INNER JOIN payment p 
    ON p.customer_id = c.customer_id
INNER JOIN staff s 
    ON p.staff_id = s.staff_id
ORDER BY payment_date;



SELECT
        c.customer_id,
	c.first_name customer_first_name,
	c.last_name customer_last_name,
	s.first_name staff_first_name,
	s.last_name staff_last_name,
	amount,
	payment_date                              //SELECT BASICALLY IS THE VALUES THAT YOU WANNA SHOW
	
FROM
    customer as c            //From the customer table 
 
INNER JOIN payment p using(customer_id)          //And then joining the payment and the staff

INNER JOIN  staff s using(staff_id)
                                          //Inner join meaning intersection
ORDER BY payment_date;                       
